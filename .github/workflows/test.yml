#
# https://github.com/chen-wilde/Actions-OpenWrt
#
# File: .github/workflows/openwrt-bulder.yml
# Description: Build OpenWrt using GitHub Actions
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: Build H68K firmware

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: h68k.config
  DEVICE: Hinlink_H68K
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 3072
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'
    
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(cat deps)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

    - name: Clone source code
      working-directory: ./
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Load custom configuration
      env:
        FRPC_CONFIG: ${{ secrets.FRPC_CONFIG }}
        TUNNEL_CONFIG: ${{ secrets.TUNNEL_CONFIG }}
        TUNNEL_CERT: ${{ secrets.TUNNEL_CERT }}
        ZEROTIER_CONFIG: ${{ secrets.ZEROTIER_CONFIG }}
        LEDE_PASSWD: ${{ secrets.LEDE_PASSWD }}
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x remote.sh $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/remote.sh
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/files/etc/config
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: |
          ${{ env.FIRMWARE }}/frpc
          ${{ env.FIRMWARE }}/cloudflared
          ${{ env.FIRMWARE }}/zerotier
          ${{ env.FIRMWARE }}/tailscale